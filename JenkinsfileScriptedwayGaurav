node{
   
    def mavenHome = tool name: "maven 3.8.5"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
   
   echo "Job name is: ${env.JOB_NAME}"
   echo "Node name is: ${env.NODE_NAME}"
   echo "Build number is: ${env.BUILD_NUMBER}"
   
   
   Try{
    stage('CheckoutCode')
{
    git branch: 'development', credentialsId: 'e30d218e-b0cd-486b-98f0-ea1163f81463', url: 'https://github.com/gauravyl/maven-web-application.git'
}

    stage('Build')
    {
sh "${mavenHome}/bin/mvn clean package"
    }
    /*
    stage('ExecuteSonarQubeReport')
    {
sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    
    stage('UploadArtifactsIntoNexus')
    {
sh "${mavenHome}/bin/mvn deploy"
    }
    
    stage('DeployAppIntoTomcatServer')
    {
sshagent(['4dffdd44-0183-4343-a9b5-5d02bbdfcc02']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.10:/opt/apache-tomcat-9.0.63/webapps"

}
    }
    */
}catch(e){
currentBuild.result = "FAILED"
throw e
}
finally{
sendSlackNotifications(currentBuild.result)
}

}
//Below code will use for slack notifications

def sendSlackNotification(String buildStatus = 'STARTED') {
  
  
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
